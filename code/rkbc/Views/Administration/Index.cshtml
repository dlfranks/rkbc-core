@model IEnumerable<rkbc.web.viewmodels.AppUserViewModel>
@using rkbc.web.helpers
@using rkbc.core.models
@{
    ViewData["Title"] = "Index";
}
<div class="content">
    <div class="container">


        <h1>Users</h1>

        <p>
            <a action="/Administration/Create">User List</a>
        </p>
        <p class="error" style="color:red;">@TempData["errors"]</p>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.roles)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.firstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.lastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.gender)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.department)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.DOB)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.phoneNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.address1)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
        {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @if (item.roles != null)
                    {
                        <span>@String.Join(",", item.roles)</span>
                    }


                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.firstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.lastName)
                    </td>
                    <td>
                        @if(item.gender != null)
                        {
                            @Enum.GetName(typeof(GenderEnum), item.gender.Value);
                        }

                    </td>
                    <td>
                        @if (item.department != null)
                        {
                            @Enum.GetName(typeof(GroupEnum), item.department.Value);
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DOB)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.phoneNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.address1)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id=item.id} )|
                        @Html.ActionLink("Details", "Details", new { id=item.id} )|
                        @Html.ActionLink("Delete", "Delete", new { id=item.id} )|

                    </td>
                </tr>

}
            </tbody>
        </table>
    </div>
</div>
