@model rkbc.web.viewmodels.HomeAttachmentIndexViewModel
@{
    ViewData["Title"] = "Edit";
}
<style>
    .dirty-button {
        background-color: orange;
        color: white !important;
    }
</style>
<h1>Edit</h1>
<script>
    $(function () {
        var HomeAttachmentViewModel = function (parentGrid, dataJS) {
            var data = dataJS || {};
            var self = this;
            self = ko.mapping.fromJS(dataJS);
            //var self = this;
            //self.id = ko.observable(dataJS.id);
            //self.url = ko.observable(dataJS.url);
            //self.sectionId = ko.observable(dataJS.sectionId);
            //self.originalFileName = ko.observable(dataJS.originalFileName);
            //self.fileName = ko.observable(dataJS.fileName);
            //self.caption = ko.observable(dataJS.caption);
            //self.isOn = ko.observable(dataJS.isOn);
            //Validation
            
            //Dirty
            self.dirtyFlag = new ko.dirtyFlag(self, !self.id());
            self.updateServer = function () {
                ko.rkbcPost({
                    viewModel: self,
                    url: '/Attachment/UpdateAttachment/' + self.id(),
                    success: function (data) {
                        self.isOn = data.isOn;
                        self.sectionId = data.sectionId;
                        self.dirtyFlag.reset();
                        
                    }
                });
            };
            self.deleteServer = function () {
                if (self.id()) {
                    if (confirm('Are you sure you wish to delete this image?')) {
                        ko.rkbcPost({
                    viewModel: self,
                    url: '/Attachment/DeleteRecord/' + self.id(),
                            success: function (result) {
                                if (result.success) {
                                    parentGrid.deleteItem(self);
                                }
                        
                    }
                });
                    }
                }
                
            }
            return (self);
        };

        var vm = new ko.GridViewModel({
            ctor: HomeAttachmentViewModel,
            indexUrl: '/Attachment/GetRecords',
            getUrl: '/Attachment/GetRecord',
            pageSize: @Model.getRecordCount,
            currentPage: @(Model.getStartRecord/Model.getRecordCount),
            sortable: {}
        });  
        
        vm.addFile = function () {
                var fileEle = $("#upload")
                var file = fileEle[0].files[0];
                    if (file) {
                        var form = new FormData();
                        form.append("image", file);
                        $.ajax({
                            type: "post",
                            url: "/Attachment/CreateAttachment",
                            data: form,
                            processData: false,
                            contentType: false,
                            success: function (data) {
                                if (data.success) {
                                    fileEle.val(null);
                                    var item = new HomeAttachmentViewModel(vm, data.item);
                                    vm.addItem(item);
                                } else {

                                }
                            },
                            error: function (request, error) {
                                alert("Request: "+JSON.stringify(request));
                            }
                        }).done(function () {
                            
                        });  

                    }

            };  
            
        vm.clickUploadBtn = function () {
            $("#upload").click();
        };
        
        
            
        vm.loadPage();
        vm.sectionList = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.sectionList));
        ko.applyBindings(vm);
    });
</script>

<div class="content">
    <div class="container">
        <div class="row">
            <div class="span12">
                <div style="margin-left:10px;">
                    <input type="file" id="upload" data-bind="event:{change:addFile}" style="display:none;" />
                    <button data-bind="click:clickUploadBtn, clickBubble: false">Add New</button>
                </div>
                <section id="portfolio-items">

                    <div class="row">
                        <ul class="portfolio">
                            <!-- ko foreach: items -->
                            <li class="span3">
                                <article class="project" data-tags="photography" style="margin:10px;">
                                    <div class="square-1" style="text-align:center;">
                                        <div class="">
                                            <label style="color:#3b3b3b;">
                                                <input type="checkbox" data-bind="checked:isOn" class="checkbox " /> Display
                                            </label>
                                        </div>
                                        <div class="img-container">
                                            <input type="text" data-bind="value:id" style="display:none;">
                                            <img data-bind="attr:{src:url}">

                                        </div>
                                        <p>
                                            <select data-bind="options: $parent.sectionList,
                                                optionsText: 'name',
                                                optionsValue: 'id',
                                                value: sectionId,
                                                optionsCaption: 'Select...'"></select>
                                        </p>
                                        <div>
                                            <button data-bind="css:{'dirty-button':dirtyFlag.isDirty()}, click:updateServer">Edit</button>
                                            <button data-bind="click:deleteServer">Delete</button>
                                        </div>
                                    </div>


                                </article>

                            </li>
                            <!--/ko-->
                        </ul>
                    </div>
                </section>
                <div style="margin-left:10px;">
                    <button class="btn btn-blue" data-bind="click: prevPage, jqButton: { disabled: !prevPageEnabled() }">Prev</button>
                    <button class="btn btn-blue" data-bind="click: nextPage, jqButton: { disabled: !nextPageEnabled() }">Next</button>
                </div>
            </div>
        </div>

    </div>
    
</div>



    





